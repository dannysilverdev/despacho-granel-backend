service: despacho-granel-app

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, self:custom.defaultRegion}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:us-east-1:207567761860:table/DespachoGranelTable
    - Effect: Allow
      Action:
        - execute-api:Invoke
      Resource:
        - "arn:aws:execute-api:us-east-1:*:*"

functions:
  signup:
    handler: handler.signup
    events:
      - http:
          path: signup
          method: post
          cors:
            origin:
              - 'https://dz17oj4ivartw.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  login:
    handler: handler.login
    events:
      - http:
          path: login
          method: post
          cors:
            origin:
              - 'https://dz17oj4ivartw.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  home:
    handler: handler.home
    events:
      - http:
          path: home
          method: get
          cors:
            origin:
              - 'https://dz17oj4ivartw.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  dispatch:
    handler: handler.dispatch
    events:
      - http:
          path: dispatch
          method: get
          cors:
            origin:
              - 'https://dz17oj4ivartw.cloudfront.net'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: DespachoGranelTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    GatewayResponse:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          "gatewayresponse.header.Access-Control-Allow-Origin": "'https://dz17oj4ivartw.cloudfront.net'"
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type, Authorization'"
          "gatewayresponse.header.Access-Control-Allow-Methods": "'GET, POST, OPTIONS'"
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  defaultRegion: us-east-1

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      noStart: true  # No intentará iniciar DynamoDB si ya está corriendo en Docker
